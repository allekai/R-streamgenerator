% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateRow.R
\name{generate.row}
\alias{generate.row}
\title{Generate a row with statistical properties}
\usage{
generate.row(dim = 10, subspaces = list(c(3, 4), c(7, 8)),
  margins = list(0.9, 0.9), dependency = "Wall", prop = 0.01,
  proptype = "proportional", discretize = 0, method = "Rejection",
  verbose = FALSE)
}
\arguments{
\item{dim}{Number of dimensions of the generated vector}

\item{subspaces}{List of subspaces that contain a dependency}

\item{margins}{List of margins that correspond to each subspace}

\item{dependency}{Type of dependency for the subspaces (We don't support}

\item{prop}{Probability of a point belonging to the hidden space of a}

\item{proptype}{Type of the proportion of outliers. Value "proportional":}

\item{discretize}{Number of discrete values in each dimension. Defaults to
zero, i.e. the stream is continuous. Can not be equal to 1. For every
Integer value greater than 1, each dimension will have the provided
number values, each being equidistant to another.}

\item{method}{Defines the point generation method. "Rejection" creates points
randomly until they fit into the dependency. "Construction" creates points
that are close to the relation with respect to the margin. If proptype is
"proportional" then first a random point is generated to check, whether the
point is in the hidden space and may become an outlier. If proptype is
"absolute" the decision whether the point becomes an outlier is made piror
to its generatrion. Defaults to "Rejection".}
}
\value{
A list with 2 elements where \code{data} contains the generated
}
\description{
Generate a row with statistical properties
}
\details{
The row is at first drawn from the uniform distribution between 0 and 1 over each dimension.
For each subspace in \code{subspaces}, if the point belongs to the hidden space of the specified dependency
(i.e. for the "Wall", the value for each dimension of the subspace if bigger than the 1-margin),
it then becomes an outlier with probability \code{prop}. If it is an outlier, it would stay in the hidden space
and we make sure it is not too close to the border by rescaling the value so that it is at least 10% of the hidden space away from it.
If it is not an outlier, we map uniformly the point to the dependencies (i.e. for "Wall", one of the axis or center (for a 3-D dimensions)).
The probability to be mapped to one of such element is determined by their volume.
The bigger the area, the more likely the point will be mapped to the area.
In the case a point is already an outlier in a subspace, it cannot become an outlier in an overlapping subspace
but it still has the same probability to become an outlier in another space. This appends occasionally (pigeonhole principle)

If the point is not an outlier, it will have \code{0} as label, otherwise it has a string representing the different subspaces.
}
\seealso{
\itemize{
\item \code{\link{generate.dynamic.stream}} : generate a dynamic stream
\item \code{\link{generate.static.stream}}  : generate a static stream
}
}
\author{
Edouard Fouch?, \email{edouard.fouche@kit.edu}
}
